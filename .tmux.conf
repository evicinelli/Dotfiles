# General options
set-window-option -g bell-action other
set-window-option -g visual-bell on
set-window-option -g mode-keys vi
set -g mouse off
set -g renumber-windows on
set -g base-index 1

# Window, splits and panes
bind c new-window
bind C new-window -c "#{pane_current_path}"
bind - split-window
bind \ split-window -h
bind _ split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind Tab last-window

bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind h select-pane -L
bind S-Left resize-pane -L 2
bind S-Right resize-pane -R 2
bind S-Down resize-pane -D 1
bind S-Up resize-pane -U 1
bind C-Left resize-pane -L 10
bind C-Right resize-pane -R 10
bind C-Down resize-pane -D 5
bind C-Up resize-pane -U 5

# Vim
set -sg escape-time 0

## Smart pane switching with awareness of Vim splits.
## See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key C-l send-keys 'C-l'

# Status and colors
set -g status off
set -g status-fg colour15
set -g status-bg colour240
set -g window-status-format "#[fg=colour15] #I #W "
set -g window-status-current-format "#[fg=colour0,noreverse,bg=colour7] #I #W "
unbind s
bind s set status
set -g status-right "#(~/.local/bin/utils/tmux-status.sh)"
set -g status-right-length 300
