" Vim-plug
call plug#begin()
Plug 'tpope/vim-sensible'		" Sensible default
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }	" Nerdtree
Plug 'morhetz/gruvbox'			" Colorscheme
Plug 'junegunn/goyo.vim'		" Goyo - distraction free writing
Plug 'airblade/vim-gitgutter'		" Git diff aside line numbers
Plug 'itchyny/lightline.vim'		" Tabline
Plug 'mhinz/vim-startify'		" Vim-startify
Plug 'pseewald/vim-anyfold'		" Autofolding 
call plug#end()

" General Settings
syntax enable			" Enable syntax hilighting
filetype plugin on		" Filetype plugin
filetype plugin indent on
set number relativenumber	" Line numbers are relative to current linw
set path+=**			" Recursive file search
set wildmenu			" Tab autocompletion
set list listchars=trail:Â·,tab:\ \ ,eol:\ 	" How vim displays special chars
set fillchars+=vert:\|		" Vertical separator char
set autoread			" Autoreload file if modifiead from external command
set shortmess+=I		" No greetings
set hlsearch			" Hilight all search results
set smartcase			" Smart-case search
set ignorecase			" Case-insensitive
set incsearch			" Incremental search
set autoindent			" Auto-indent
set smartindent			" Smart indent
set smarttab			" Smart tabs
set shiftwidth=4		" Auto indent spaces
set t_Co=256			" 256 color terminal support
set linespace=1			" Line spacing
set showtabline=2		" Always show tab
set noshowmode


" Appearance
if has('gui_running')
    colorscheme gruvbox
    set background=dark
    set guifont=Inconsolata\ 13
    set guioptions-=m	"remove menu bar
    set guioptions-=T	"remove toolbar
    set guioptions-=r	"remove right-hand scroll bar
    set guioptions-=L	"remove left-hand scroll bar
    set guioptions-=e
    set guiheadroom=0
    let g:lightline = {
	\ 'colorscheme': 'gruvbox',
        \ 'active': {
        \	'right': [ [ 'lineinfo' ],
        \              [ 'percent' ],
        \              [  'filetype', 'charvaluehex' ] ]
        \ }, 
    \ }
else
    let g:lightline = {
	\ 'enable' : { 'statusline':0 },
	\ }
endif

" Plugin settings
let g:gitgutter_realtime=0
let anyfold_activate=1
set foldlevel=0

" Custom shortcut and commands
noremap <C-l> gt<CR>
noremap <C-h> gT<CR>
noremap <C-n> :NERDTreeToggle<CR>
noremap <C-g> :Goyo<CR>
command Focus :Goyo|:NERDTreeToggle
